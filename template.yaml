AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  The Pups

  Provides data and stats related to dogs in the shelter and volunteers taking care of them.

Parameters:
  Env:
    Description: 'The environment to deploy to.'
    Type: 'String'
    Default: 'dev'

  ThePupsInfoSnippetsBucketName:
    Description: 'Required. Bucket name to which output html snippets will be written'
    Type: 'String'
    Default: 'the-pups-snippets-2020'

  ThePupsOutputDataBucketName:
    Description: 'Required. Bucket name to which output data files will be written'
    Type: 'String'
    Default: 'the-pups-output-2020'

  ThePupsUploadsBucketName:
    Description: 'Required. Bucket name to which data files will be uploaded'
    Type: 'String'
    Default: 'the-pups-uploads-2020'

Globals:
  Function:
    Runtime: python3.7
    Handler: app.lambda_handler
    Timeout: 10
    Tags:
      dsh:application: 'thepups'
    Environment:
      Variables:
        SNIPPETS_BUCKET: !Sub "${Env}-${ThePupsInfoSnippetsBucketName}"

Resources:
  # Lambda to extract data from daily dog exercise csv and output a set of HTML snippets related to dog counts by type
  # and information on each dog.  In addition, the relevant data will be written out for downstream processing.
  ProcessDogCSV:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: process_dog_report
      Layers:
        - arn:aws:lambda:us-west-2:596489275888:layer:pandas-0-25:2
        - !Ref ThePupsLibraryLayer
      Policies:
        - AWSLambdaExecute
        # Policies have to use the !Sub instead of !Ref otherwise a circular dependency is created and it wont deploy
        - S3ReadPolicy:
            BucketName: !Sub "${Env}-${ThePupsUploadsBucketName}"
        - S3CrudPolicy:
            BucketName: !Sub "${Env}-${ThePupsInfoSnippetsBucketName}"
        - S3CrudPolicy:
            BucketName: !Sub "${Env}-${ThePupsOutputDataBucketName}"
      Environment:
        Variables:
          OUTPUT_DATA_BUCKET: !Sub "${Env}-${ThePupsOutputDataBucketName}"
      Events:
        DogExerciseListAdded:
          Type: S3
          Properties:
            Bucket: !Ref ThePupsUploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: dbs_exercise_list/
                  - Name: suffix
                    Value: .csv

  # Lambda to extract schedule table from DBS Schedule PDF and store as CSV in S3 bucket.
  ConvertDbsScheduleReport:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: convert_dbs_schedule_report
      Handler: pdftable.Handler::handleRequest
      Runtime: java8
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          OUTPUT_DATA_BUCKET:
            Ref: ThePupsOutputDataBucket
      Policies:
        - AWSLambdaExecute
        # Policies have to use the !Sub instead of !Ref otherwise a circular dependency is created and it wont deploy
        - S3ReadPolicy:
            BucketName: !Sub "${Env}-${ThePupsUploadsBucketName}"
        - S3CrudPolicy:
            BucketName: !Sub "${Env}-${ThePupsOutputDataBucketName}"
      Events:
        DogExerciseListAdded:
          Type: S3
          Properties:
            Bucket: !Ref ThePupsUploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: dbs_schedule/
                  - Name: suffix
                    Value: .pdf

  # Lambda to extract data from DBS schedule csv and output a set of HTML snippets related to shift counts by type
  # In addition, the relevant data will be written out for downstream processing.
  CaclulateShiftCounts:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: calculate_shift_counts
      Layers:
        - arn:aws:lambda:us-west-2:596489275888:layer:pandas-0-25:2
        - !Ref ThePupsLibraryLayer
      Policies:
        - AWSLambdaExecute
        # Policies have to use the !Sub instead of !Ref otherwise a circular dependency is created and it wont deploy
        - S3CrudPolicy:
            BucketName: !Sub "${Env}-${ThePupsInfoSnippetsBucketName}"
        - S3CrudPolicy:
            BucketName: !Sub "${Env}-${ThePupsOutputDataBucketName}"
      Environment:
        Variables:
          OUTPUT_DATA_BUCKET: !Sub "${Env}-${ThePupsOutputDataBucketName}"
      Events:
        DbsShiftCsvAdded:
          Type: S3
          Properties:
            Bucket: !Ref ThePupsOutputDataBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: dbs_schedule/
                  - Name: suffix
                    Value: .csv

  # Common code layer used by other python modules in this template.
  ThePupsLibraryLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: the-pups-common-library
      Description: Function library layer for use across the pups application.
      ContentUri: dependencies
      CompatibleRuntimes:
        - python3.7
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain

  ThePupsUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Env}-${ThePupsUploadsBucketName}"
      AccessControl: Private

  ThePupsInfoSnippetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Env}-${ThePupsInfoSnippetsBucketName}"
      AccessControl: PublicRead

  ThePupsOutputDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Env}-${ThePupsOutputDataBucketName}"
      AccessControl: Private

#Outputs:
